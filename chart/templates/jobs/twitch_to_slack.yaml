apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: twitch-to-slack
  namespace: {{.Values.namespace}}
  labels:
    {{- include "workflows.labels" . | nindent 4 }}
spec:
  entrypoint: tts-temp

  serviceAccountName: {{.Values.serviceAccount.name}}
  arguments:
    parameters:
      - name: runtime
        {{/* note to future self: go template escape, but then string literal with double quote for template */}}
        default: {{`"{{workflow.creationTimestamp.RFC3339}}"`}}
  workflowMetadata:
    labels:
      {{- include "workflows.labels" . | nindent 6 }}
  templates:
    - name: tts-temp
      metadata:
        labels:
          {{- include "workflows.labels" . | nindent 10 }}
      inputs:
        parameters:
          - name: runtime
      container:
        name: main
        image: {{.Values.image.repository}}:{{.Values.image.tag}}
        args:
          - "twitch-to-slack"
          - "temp-entrypoint"
          - {{`"{{inputs.parameters.runtime}}"`}}
        env:
          - name: TWITCH_API_APP_ID
            valueFrom:
              secretKeyRef:
                name: {{.Values.secrets.twitch.name}}
                key: api-app-id
          - name: TWITCH_API_APP_SECRET
            valueFrom:
              secretKeyRef:
                name: {{.Values.secrets.twitch.name}}
                key: api-app-secret
          - name: SLACK_WHALEBOT_OAUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{.Values.secrets.slack.name}}
                key: whalebot-oauth-token
          # TODO long term should be sourced from elsewhere
          - name: SLACK_TWITCH_ALERT_CHANNEL_ID
            valueFrom:
              secretKeyRef:
                name: {{.Values.secrets.slack.name}}
                key: twitch-alert-channel-id
